{"ast":null,"code":"var _jsxFileName = \"/Users/ivann/semaine_REACT/reactJS/td_2_exemple/src/component/Home.js\";\nimport React from \"react\";\nimport { randomNb, replay } from \"./Number\";\nimport './Home.css';\nconst nbRandom = randomNb(101);\nvar count = 0;\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"txt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Entrez un nombre entre 0 et 100 :\"), React.createElement(\"input\", {\n        id: \"number-form\",\n        type: \"number\",\n        value: this.state.entry,\n        onChange: e => this.setState({\n          entry: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"submit-btn\",\n        onClick: e => this.play(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Envoyer\"), React.createElement(\"button\", {\n        id: \"restart-btn\",\n        onClick: e => this.replay(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Recommencer\")), React.createElement(\"div\", {\n        className: \"reponse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.infos)))));\n    };\n\n    this.state = {\n      numberToFind: nbRandom,\n      entry: null,\n      infos: ''\n    };\n  }\n\n  play(e) {\n    e.preventDefault();\n    count++;\n\n    if (this.state.numberToFind > this.state.entry) {\n      this.setState({\n        infos: \"C'est plus grand !\"\n      });\n    } else if (this.state.numberToFind < this.state.entry) {\n      this.setState({\n        infos: \"C'est plus petit !\"\n      });\n    } else {\n      this.setState({\n        infos: \"Gagné !\"\n      });\n    } //     if (nb !== entry) {\n    //         if (nb < entry){\n    //             infos = \"C'est plus petit !\";\n    //         }else if (nb > entry){\n    //             infos = \"C'est plus grand !\";\n    //         }\n    //     }\n    //\n    //     if(nb == entry){\n    //         infos = \"Gagné !\";\n    //\n    // /*        if (myTable.length === 5) {\n    //             myTable.shift();\n    //         }\n    //         myTable.push([myRandom,counter]);\n    //         displayTable();*/\n    //         win = true;\n    //     }\n\n\n    this.setState({\n      entry: null\n    });\n    console.log(this.state.numberToFind);\n    console.log(this.state.entry);\n    console.log(this.state.infos);\n  }\n\n  replay(e) {\n    e.preventDefault();\n    this.setState({\n      numberToFind: randomNb(101),\n      entry: null,\n      infos: ''\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/ivann/semaine_REACT/reactJS/td_2_exemple/src/component/Home.js"],"names":["React","randomNb","replay","nbRandom","count","Home","Component","constructor","props","render","state","entry","e","setState","target","value","play","infos","numberToFind","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {randomNb,replay} from \"./Number\";\nimport './Home.css';\n\nconst nbRandom = randomNb(101);\nvar count = 0;\n\nexport default class Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnumberToFind: nbRandom,\n\t\t\tentry: null,\n\t\t\tinfos: ''\n\t\t}\n\t};\n\n\tplay (e) {\n\t\te.preventDefault();\n\n\t\tcount++;\n\n\t\tif(this.state.numberToFind>this.state.entry){\n\t\t\tthis.setState({infos :\"C'est plus grand !\"})\n\t\t}\n\t\telse if(this.state.numberToFind<this.state.entry){\n\t\t\tthis.setState({infos :\"C'est plus petit !\"})\n\t\t}\n\t\telse {\n\t\t\tthis.setState({infos :\"Gagné !\"})\n\t\t}\n\n//     if (nb !== entry) {\n//         if (nb < entry){\n//             infos = \"C'est plus petit !\";\n//         }else if (nb > entry){\n//             infos = \"C'est plus grand !\";\n//         }\n//     }\n//\n//     if(nb == entry){\n//         infos = \"Gagné !\";\n//\n// /*        if (myTable.length === 5) {\n//             myTable.shift();\n//         }\n//         myTable.push([myRandom,counter]);\n//         displayTable();*/\n//         win = true;\n//     }\n\t\tthis.setState({entry: null});\n\t\tconsole.log(this.state.numberToFind);\n\t\tconsole.log(this.state.entry);\n\t\tconsole.log(this.state.infos);\n\t};\n\t\n\n\treplay (e) {\n\t\te.preventDefault();\n\t\tthis.setState({numberToFind: randomNb(101), entry: null, infos: '' });\n\t};\n\n\trender = () => {\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div class=\"txt\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<label>Entrez un nombre entre 0 et 100 :</label>\n\t\t\t\t\t\t\t<input id=\"number-form\" type=\"number\" value={this.state.entry} onChange={e => this.setState({entry: e.target.value})}/>\n\t\t\t\t\t\t\t<button id=\"submit-btn\" onClick={e => this.play(e)} >Envoyer</button>\n\t\t\t\t\t\t\t<button id=\"restart-btn\" onClick={(e)=>this.replay(e)}>Recommencer</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div className=\"reponse\">\n\t\t\t\t\t\t\t<p>{this.state.infos}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}