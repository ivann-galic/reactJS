{"ast":null,"code":"var count = 0;\nvar win = false;\nexport function randomNb(max) {\n  return Math.floor(Math.random() * max);\n}\nconst toto = randomNb(101);\n/*export function play (e, nb, entry, infos) {\n    e.preventDefault();\n\n    count++;\n\n        if(nb>entry){\n            infos = \"C'est plus grand !\";\n        }\n        else if(nb<entry){\n            infos = \"C'est plus petit !\";\n        }\n        else {\n            infos = \"Gagné !\";\n        }\n\n//     if (nb !== entry) {\n//         if (nb < entry){\n//             infos = \"C'est plus petit !\";\n//         }else if (nb > entry){\n//             infos = \"C'est plus grand !\";\n//         }\n//     }\n//\n//     if(nb == entry){\n//         infos = \"Gagné !\";\n//\n// /!*        if (myTable.length === 5) {\n//             myTable.shift();\n//         }\n//         myTable.push([myRandom,counter]);\n//         displayTable();*!/\n//         win = true;\n//     }\n    console.log(nb);\n    console.log(entry);\n    console.log(infos);\n}*/\n\nexport function replay(e) {\n  e.preventDefault();\n  this.setState({\n    numberToFind: null,\n    entry: null,\n    infos: ''\n  });\n}","map":{"version":3,"sources":["/Users/ivann/semaine_REACT/reactJS/td_2_exemple/src/component/Number.js"],"names":["count","win","randomNb","max","Math","floor","random","toto","replay","e","preventDefault","setState","numberToFind","entry","infos"],"mappings":"AAAA,IAAIA,KAAK,GAAG,CAAZ;AACA,IAAIC,GAAG,GAAG,KAAV;AAEA,OAAO,SAASC,QAAT,CAAmBC,GAAnB,EAAwB;AAC3B,SAAQC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAA3B,CAAR;AACH;AACD,MAAMI,IAAI,GAAGL,QAAQ,CAAC,GAAD,CAArB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAO,SAASM,MAAT,CAAiBC,CAAjB,EAAoB;AACvBA,EAAAA,CAAC,CAACC,cAAF;AACA,OAAKC,QAAL,CAAc;AAAEC,IAAAA,YAAY,EAAE,IAAhB;AAAsBC,IAAAA,KAAK,EAAE,IAA7B;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GAAd;AACH","sourcesContent":["var count = 0;\nvar win = false;\n\nexport function randomNb (max) {\n    return (Math.floor(Math.random() * max));\n}\nconst toto = randomNb(101);\n\n/*export function play (e, nb, entry, infos) {\n    e.preventDefault();\n\n    count++;\n\n        if(nb>entry){\n            infos = \"C'est plus grand !\";\n        }\n        else if(nb<entry){\n            infos = \"C'est plus petit !\";\n        }\n        else {\n            infos = \"Gagné !\";\n        }\n\n//     if (nb !== entry) {\n//         if (nb < entry){\n//             infos = \"C'est plus petit !\";\n//         }else if (nb > entry){\n//             infos = \"C'est plus grand !\";\n//         }\n//     }\n//\n//     if(nb == entry){\n//         infos = \"Gagné !\";\n//\n// /!*        if (myTable.length === 5) {\n//             myTable.shift();\n//         }\n//         myTable.push([myRandom,counter]);\n//         displayTable();*!/\n//         win = true;\n//     }\n    console.log(nb);\n    console.log(entry);\n    console.log(infos);\n}*/\n\nexport function replay (e) {\n    e.preventDefault();\n    this.setState({ numberToFind: null, entry: null, infos: ''  })\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}