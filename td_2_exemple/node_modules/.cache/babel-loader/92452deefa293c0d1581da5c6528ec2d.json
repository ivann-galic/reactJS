{"ast":null,"code":"var _jsxFileName = \"/Users/ivann/semaine_REACT/reactJS/td_2_exemple/src/component/Timer.js\";\nimport React, { Component } from \"react\";\nimport './Score.css';\nexport default class Timer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seconds: 0\n    };\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const {\n        seconds\n      } = this.state;\n\n      if (seconds > 0) {\n        this.setState(({\n          seconds\n        }) => ({\n          seconds: seconds - 1\n        }));\n      }\n\n      if (seconds === 0) {\n        clearInterval(this.myInterval);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  render() {\n    const {\n      minutes,\n      seconds\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, minutes === 0 && seconds === 0 ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Busted!\") : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Time Remaining: \", minutes, \":\", seconds < 10 ? `0${seconds}` : seconds));\n  }\n\n}","map":{"version":3,"sources":["/Users/ivann/semaine_REACT/reactJS/td_2_exemple/src/component/Timer.js"],"names":["React","Component","Timer","state","seconds","componentDidMount","myInterval","setInterval","setState","clearInterval","componentWillUnmount","render","minutes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AAGA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACC,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CE,KAD+C,GACvC;AACJC,MAAAA,OAAO,EAAE;AADL,KADuC;AAAA;;AAK/CC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAChC,YAAM;AAACH,QAAAA;AAAD,UAAY,KAAKD,KAAvB;;AAEA,UAAIC,OAAO,GAAG,CAAd,EAAiB;AACb,aAAKI,QAAL,CAAc,CAAC;AAAEJ,UAAAA;AAAF,SAAD,MAAkB;AAC5BA,UAAAA,OAAO,EAAEA,OAAO,GAAG;AADS,SAAlB,CAAd;AAGH;;AACD,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACXK,QAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACP;AACJ,KAX4B,EAW1B,IAX0B,CAA7B;AAYH;;AAEDI,EAAAA,oBAAoB,GAAG;AACnBD,IAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,OAAF;AAAWR,MAAAA;AAAX,QAAuB,KAAKD,KAAlC;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMS,OAAO,KAAK,CAAZ,IAAiBR,OAAO,KAAK,CAA7B,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAqBQ,OAArB,OAA+BR,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAA9D,CAHV,CADJ;AAQH;;AAlC8C","sourcesContent":["import React, { Component } from \"react\";\nimport './Score.css';\n\n\nexport default class Timer extends React.Component {\n    state = {\n        seconds: 0,\n    };\n\n    componentDidMount() {\n        this.myInterval = setInterval(() => {\n            const {seconds} = this.state\n\n            if (seconds > 0) {\n                this.setState(({ seconds }) => ({\n                    seconds: seconds - 1\n                }))\n            }\n            if (seconds === 0) {\n                    clearInterval(this.myInterval)\n            }\n        }, 1000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n\n    render() {\n        const { minutes, seconds } = this.state\n        return (\n            <div>\n                { minutes === 0 && seconds === 0\n                    ? <h1>Busted!</h1>\n                    : <h1>Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</h1>\n                }\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}