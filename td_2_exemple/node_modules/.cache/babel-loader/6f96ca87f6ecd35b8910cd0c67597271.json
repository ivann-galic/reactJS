{"ast":null,"code":"var _jsxFileName = \"/Users/ivann/semaine_REACT/reactJS/td_2_exemple/src/component/Home.js\";\nimport React from \"react\";\nimport { randomNb, replay } from \"./Number\";\nimport './Home.css';\nconst nbRandom = randomNb(101);\nvar count = 0;\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.render = () => {\n      const {\n        score\n      } = this.props;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"txt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        class: \"name-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Votre nom :\"), React.createElement(\"input\", {\n        id: \"name-form\",\n        type: \"text\",\n        value: this.state.name,\n        onChange: e => this.setState({\n          name: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"A vous de jouer \", this.state.name, \" !\"), React.createElement(\"label\", {\n        class: \"number-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Entrez un nombre entre 0 et 100 :\"), React.createElement(\"input\", {\n        id: \"number-form\",\n        type: \"number\",\n        value: this.state.entry,\n        onChange: e => this.setState({\n          entry: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"submit-btn\",\n        onClick: e => this.play(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Envoyer\"), React.createElement(\"button\", {\n        id: \"restart-btn\",\n        onClick: e => this.replay(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Recommencer\")), React.createElement(\"div\", {\n        className: \"reponse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.infos), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.scores.map())))));\n    };\n\n    this.state = {\n      numberToFind: nbRandom,\n      entry: null,\n      infos: '',\n      name: '',\n      scores: []\n    };\n  }\n\n  play(e) {\n    e.preventDefault();\n    count++;\n\n    if (this.state.numberToFind > this.state.entry) {\n      this.setState({\n        infos: \"C'est plus grand !\"\n      });\n    } else if (this.state.numberToFind < this.state.entry) {\n      this.setState({\n        infos: \"C'est plus petit !\"\n      });\n    } else {\n      this.setState({\n        infos: \"Gagné !\"\n      });\n      this.props.addUser(this.state);\n    } //\n    // /*        if (myTable.length === 5) {\n    //             myTable.shift();\n    //         }\n    //         myTable.push([myRandom,counter]);\n    //         displayTable();*/\n    //         win = true;\n    //     }\n\n\n    this.setState({\n      entry: null\n    });\n    console.log(this.state.numberToFind);\n    console.log(this.state.entry);\n    console.log(this.state.infos);\n    console.log(this.state.name);\n  }\n\n  replay(e) {\n    e.preventDefault();\n    this.setState({\n      numberToFind: randomNb(101),\n      entry: null,\n      infos: 'Perdu !'\n    });\n  }\n\n  addUser() {}\n\n}","map":{"version":3,"sources":["/Users/ivann/semaine_REACT/reactJS/td_2_exemple/src/component/Home.js"],"names":["React","randomNb","replay","nbRandom","count","Home","Component","constructor","props","render","score","state","name","e","setState","target","value","entry","play","infos","scores","map","numberToFind","preventDefault","addUser","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {randomNb,replay} from \"./Number\";\nimport './Home.css';\n\nconst nbRandom = randomNb(101);\nvar count = 0;\n\n\nexport default class Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnumberToFind: nbRandom,\n\t\t\tentry: null,\n\t\t\tinfos: '',\n\t\t\tname: '',\n\t\t\tscores:[]\n\t\t}\n\t};\n\n\n\tplay (e) {\n\t\te.preventDefault();\n\n\t\tcount++;\n\n\t\tif(this.state.numberToFind>this.state.entry){\n\t\t\tthis.setState({infos :\"C'est plus grand !\"})\n\t\t}\n\t\telse if(this.state.numberToFind<this.state.entry){\n\t\t\tthis.setState({infos :\"C'est plus petit !\"})\n\t\t}\n\t\telse {\n\t\t\tthis.setState({infos :\"Gagné !\"})\n\t\t\tthis.props.addUser(this.state)\n\t\t}\n//\n// /*        if (myTable.length === 5) {\n//             myTable.shift();\n//         }\n//         myTable.push([myRandom,counter]);\n//         displayTable();*/\n//         win = true;\n//     }\n\t\tthis.setState({entry: null});\n\t\tconsole.log(this.state.numberToFind);\n\t\tconsole.log(this.state.entry);\n\t\tconsole.log(this.state.infos);\n\t\tconsole.log(this.state.name);\n\t};\n\n\n\treplay (e) {\n\t\te.preventDefault();\n\t\tthis.setState({numberToFind: randomNb(101), entry: null, infos: 'Perdu !' });\n\t};\n\n\t\taddUser () {\n\t\t\t\n\t\t}\n\n\n\trender = () => {\n\t\tconst { score } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"card\">\n\t\t\t\t\t<div class=\"txt\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<label class=\"name-label\">Votre nom :</label>\n\t\t\t\t\t\t\t<input id=\"name-form\" type=\"text\" value={this.state.name} onChange={e => this.setState({name: e.target.value})}/>\n\t\t\t\t\t\t\t<p>A vous de jouer {this.state.name} !</p>\n\t\t\t\t\t\t\t<label class=\"number-label\">Entrez un nombre entre 0 et 100 :</label>\n\t\t\t\t\t\t\t<input id=\"number-form\" type=\"number\" value={this.state.entry} onChange={e => this.setState({entry: e.target.value})}/>\n\t\t\t\t\t\t\t<button id=\"submit-btn\" onClick={e => this.play(e)} >Envoyer</button>\n\t\t\t\t\t\t\t<button id=\"restart-btn\" onClick={(e)=>this.replay(e)}>Recommencer</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div className=\"reponse\">\n\t\t\t\t\t\t\t<p>{this.state.infos}</p>\n\t\t\t\t\t\t\t<p>{this.state.scores.map()}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}